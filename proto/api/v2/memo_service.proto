syntax = "proto3";

package memos.api.v2;

import "api/v2/common.proto";
import "api/v2/markdown_service.proto";
import "api/v2/memo_relation_service.proto";
import "api/v2/resource_service.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "gen/api/v2";

service MemoService {
  rpc CreateMemo(CreateMemoRequest) returns (CreateMemoResponse) {
    option (google.api.http) = {
      post: "/api/v2/memos"
      body: "*"
    };
  }

  rpc ListMemos(ListMemosRequest) returns (ListMemosResponse) {
    option (google.api.http) = {get: "/api/v2/memos"};
  }

  rpc GetMemo(GetMemoRequest) returns (GetMemoResponse) {
    option (google.api.http) = {get: "/api/v2/memos/{id}"};
    option (google.api.method_signature) = "id";
  }

  rpc UpdateMemo(UpdateMemoRequest) returns (UpdateMemoResponse) {
    option (google.api.http) = {
      patch: "/api/v2/memos/{id}"
      body: "*"
    };
    option (google.api.method_signature) = "id, update_mask";
  }

  rpc DeleteMemo(DeleteMemoRequest) returns (DeleteMemoResponse) {
    option (google.api.http) = {delete: "/api/v2/memos/{id}"};
    option (google.api.method_signature) = "id";
  }

  rpc SetMemoResources(SetMemoResourcesRequest) returns (SetMemoResourcesResponse) {
    option (google.api.http) = {
      post: "/api/v2/memos/{id}/resources"
      body: "*"
    };
    option (google.api.method_signature) = "id";
  }

  rpc ListMemoResources(ListMemoResourcesRequest) returns (ListMemoResourcesResponse) {
    option (google.api.http) = {get: "/api/v2/memos/{id}/resources"};
    option (google.api.method_signature) = "id";
  }

  rpc SetMemoRelations(SetMemoRelationsRequest) returns (SetMemoRelationsResponse) {
    option (google.api.http) = {
      post: "/api/v2/memos/{id}/relations"
      body: "*"
    };
    option (google.api.method_signature) = "id";
  }

  rpc ListMemoRelations(ListMemoRelationsRequest) returns (ListMemoRelationsResponse) {
    option (google.api.http) = {get: "/api/v2/memos/{id}/relations"};
    option (google.api.method_signature) = "id";
  }

  rpc CreateMemoComment(CreateMemoCommentRequest) returns (CreateMemoCommentResponse) {
    option (google.api.http) = {post: "/api/v2/memos/{id}/comments"};
    option (google.api.method_signature) = "id";
  }

  rpc ListMemoComments(ListMemoCommentsRequest) returns (ListMemoCommentsResponse) {
    option (google.api.http) = {get: "/api/v2/memos/{id}/comments"};
    option (google.api.method_signature) = "id";
  }
}

enum Visibility {
  VISIBILITY_UNSPECIFIED = 0;

  PRIVATE = 1;

  PROTECTED = 2;

  PUBLIC = 3;
}

message Memo {
  int32 id = 1;

  RowStatus row_status = 2;

  int32 creator_id = 3;

  google.protobuf.Timestamp create_time = 4;

  google.protobuf.Timestamp update_time = 5;

  google.protobuf.Timestamp display_time = 6;

  string content = 7;

  repeated Node nodes = 8;

  Visibility visibility = 9;

  bool pinned = 10;
}

message CreateMemoRequest {
  string content = 1;

  Visibility visibility = 2;
}

message CreateMemoResponse {
  Memo memo = 1;
}

message ListMemosRequest {
  int32 page = 1;

  int32 page_size = 2;

  // Filter is used to filter memos returned in the list.
  string filter = 3;
}

message ListMemosResponse {
  repeated Memo memos = 1;
}

message GetMemoRequest {
  int32 id = 1;
}

message GetMemoResponse {
  Memo memo = 1;
}

message UpdateMemoRequest {
  int32 id = 1;

  Memo memo = 2;

  google.protobuf.FieldMask update_mask = 3;
}

message UpdateMemoResponse {
  Memo memo = 1;
}

message DeleteMemoRequest {
  int32 id = 1;
}

message DeleteMemoResponse {}

message SetMemoResourcesRequest {
  int32 id = 1;

  repeated Resource resources = 2;
}

message SetMemoResourcesResponse {}

message ListMemoResourcesRequest {
  int32 id = 1;
}

message ListMemoResourcesResponse {
  repeated Resource resources = 1;
}

message SetMemoRelationsRequest {
  int32 id = 1;

  repeated MemoRelation relations = 2;
}

message SetMemoRelationsResponse {}

message ListMemoRelationsRequest {
  int32 id = 1;
}

message ListMemoRelationsResponse {
  repeated MemoRelation relations = 1;
}

message CreateMemoCommentRequest {
  // id is the memo id to create comment for.
  int32 id = 1;

  CreateMemoRequest create = 2;
}

message CreateMemoCommentResponse {
  Memo memo = 1;
}

message ListMemoCommentsRequest {
  int32 id = 1;
}

message ListMemoCommentsResponse {
  repeated Memo memos = 1;
}
